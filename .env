# In all environments, the following files are loaded if they exist,
# the latter taking precedence over the former:
#
#  * .env                contains default values for the environment variables needed by the app
#  * .env.local          uncommitted file with local overrides
#  * .env.$APP_ENV       committed environment-specific defaults
#  * .env.$APP_ENV.local uncommitted environment-specific overrides
#
# Real environment variables win over .env files.
#
# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.
# https://symfony.com/doc/current/configuration/secrets.html
#
# Run "composer dump-env prod" to compile .env files for production use (requires symfony/flex >=1.2).
# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration

###> symfony/framework-bundle ###
APP_ENV=prod
APP_HOST=
APP_SECRET=
###< symfony/framework-bundle ###

###> doctrine/doctrine-bundle ###
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
#
# DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
# DATABASE_URL="mysql://app:!ChangeMe!@127.0.0.1:3306/app?serverVersion=8.0.32&charset=utf8mb4"
# DATABASE_URL="mysql://app:!ChangeMe!@127.0.0.1:3306/app?serverVersion=10.11.2-MariaDB&charset=utf8mb4"
DATABASE_URL="postgresql://app:!ChangeMe!@127.0.0.1:5432/app?serverVersion=17&charset=utf8"
###< doctrine/doctrine-bundle ###

NGINX_EXTERNAL_PORT=80
PG_EXTERNAL_PORT=5432
PG_USER=
PG_PASSWORD=
PG_DBNAME=

###> symfony/monolog-bundle ###
TELEGRAM_CONFIG_ERROR_BOT_KEY=
TELEGRAM_CONFIG_ERROR_CHAT_ID=
TELEGRAM_CONFIG_ERROR_TOPIC=
###< symfony/monolog-bundle ###

###> framework-bundle
TRUSTED_PROXIES="127.0.0.1, REMOTE_ADDR"

TRUSTED_HEADERS="x-forwarded-for, x-forwarded-proto"
###< framework-bundle

###> encryptors
# Выберите метод шифрования с помощью функции openssl_get_cipher_methods()
MESSAGE_TEXT_ENCRYPTOR_CIPHER_METHOD=
# Необходимую длину кодовой фразы можно получить с помощью функции openssl_cipher_key_length()
MESSAGE_TEXT_ENCRYPTOR_PASSPHRASE=
# Необходимую длину iv вектора можно получить с помощью функции openssl_cipher_iv_length()
MESSAGE_TEXT_ENCRYPTOR_IV=

# Необходимую длину этого параметра можно получить с помощью константы SODIUM_CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NPUBBYTES
MESSAGE_ID_ENCRYPTOR_NONCE=
# Необходимую длину ключа можно получить с помощью константы SODIUM_CRYPTO_AEAD_XCHACHA20POLY1305_IETF_KEYBYTES
MESSAGE_ID_ENCRYPTOR_KEY=
###< encryptors

###> symfony/messenger ###
# Choose one of the transports below
# MESSENGER_TRANSPORT_DSN=amqp://guest:guest@localhost:5672/%2f/messages
# MESSENGER_TRANSPORT_DSN=redis://localhost:6379/messages
MESSENGER_TRANSPORT_DSN=doctrine://default?auto_setup=1&queue_name=default&check_delayed_interval=1000&get_notify_timeout=10

MESSENGER_TRANSPORT_LOG_DSN=doctrine://default?queue_name=log&auto_setup=1&check_delayed_interval=1000&get_notify_timeout=10
###< symfony/messenger ###

###> messages ###
# Время жизни сообщений,
# можно указать количество секунд целым числом или числом с плавающей запятой,
# или строкой, валидной для передачи в конструктор DateInterval (https://www.php.net/manual/ru/dateinterval.construct.php),
# или строкой, валидной для передачи в метод DateInterval::createFromDateString (https://www.php.net/manual/ru/datetime.formats.php#datetime.formats.relative)
MESSAGE_LIFETIME="60 seconds"
###< messages ###

###> symfony/lock ###
# Choose one of the stores below
# postgresql+advisory://db_user:db_password@localhost/db_name
LOCK_DSN=flock
###< symfony/lock ###

###> rate limiter ###
RATE_LIMIT=20
RATE_INTERVAL="10 seconds"
###< rate limiter ###
